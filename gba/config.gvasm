//
// gvsong - Builds and renders songs designed for Game Boy Advance
// by Sean Connelly (@velipso), https://sean.cm
// Project Home: https://github.com/velipso/gvsong
// SPDX-License-Identifier: 0BSD
//

.def maxChannelCount   = 6
.def dutyCount         = 8
.def maxPhaseBits      = 11
.def sampleRate        = 1 << 15
.def pitchDivisionBits = 4 // how many freqs between notes (2^n)
.def maxPhaseQBits     = maxPhaseBits + 5
.def maxRndSample      = 1 << 15 // max of 1 << 15
.def bufferSize        = 0x260

.struct song_st
  .u32 magic
  .u8  version
  .u8  channelCount
  .u16 reserved
  .u8  instsLength
  .u8  seqsLength
  .u16 patsLength
  .u32 instTableOffset
  .u32 seqTableOffset
  .u32 patTableOffset
  .u16 pcmMapping[120]
.end

.struct songInst_st
  .u16 wave
  .struct volumeEnv
    .u8  attack
    .u8  sustain
    .u8  length
  .end
  .struct pitchEnv
    .u8  attack
    .u8  sustain
    .u8  length
  .end
  .u16 volumeEnvOffset
  .u16 pitchEnvOffset
.end

.struct songSeq_st
  .u16 patLength // not used in GBA player
  .u16 loopIndex
  .u16 exit
  .u16 patterns // variable length array
.end

.struct channel_st
  .i32 state // 0 off, 1 note released, 2 note on
  .i32 delay
  .struct delayedNoteOn
    .i32 left
    .i32 note
  .end
  .struct delayedNoteOff
    .i32 left
  .end
  .struct delayedBend
    .i32 left
    .i32 duration
    .i32 note
  .end
  .i32 chanVolume
  .i32 envVolumeIndex
  .i32 basePitch
  .i32 targetPitch
  .i32 bendCounter
  .i32 bendCounterMax
  .i32 envPitchIndex
  .i32 phase
  .u32 instBasePointer
.end

.struct IW = 0x03000000
  .struct synth
    .i32 songBasePointer
    .i32 sequence
    .i32 tempoIndex
    .i32 tickStart
    .i32 tickLeft
    .i32 seqIndex
    .i32 patPointer
    .i8  channel[maxChannelCount * channel_st._bytes]
  .end

  // bufferAddr[0] points to the DMA source
  // bufferAddr[1] is the DMA source on deck
  // bufferAddr[2] is after that
  .i32 bufferAddr[3]
  .i32 nextBufferIndex
  .i8  buffer1[bufferSize]
  .i8  buffer2[bufferSize]
  .i8  buffer3[bufferSize]
  .i16 bufferTemp[bufferSize]
  .i32 masterVolume // 0-16

  .i8  volumeStr[8]
  .i8  sequenceStr[8]
end:
.end

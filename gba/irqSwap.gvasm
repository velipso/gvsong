//
// gvsong - Builds and renders songs designed for Game Boy Advance
// by Sean Connelly (@velipso), https://sean.cm
// Project Home: https://github.com/velipso/gvsong
// SPDX-License-Identifier: 0BSD
//

.stdlib
.import './main.gvasm' { IW }

.begin irqSwap
  .arm
  // irqNone...
  mov   r0, #0x04000000
  ldr   ip, [r0, #0x200]!
  and   r2, ip, ip, lsr #16
  strh  r2, [r0, #2]
  ldr   r3, [r0, #-0x208]
  orr   r3, r3, r2
  str   r3, [r0, #-0x208]
  // but check for handlers
  ands  r3, r2, #0x10
  bne   timer1
  ands  r3, r2, #0x01
  bne   vblank
  bx    lr
timer1:
  push  {r4-r5}

  // prepare to swap out DMAs
  ldr   r0, =IW.bufferAddr[0]
  ldr   r1, =0
  ldr   r2, [r0, #4]
  ldr   r3, =0xb640
  ldr   r4, =REG_DMA1CNT_H
  ldr   r5, =REG_DMA1SAD

  // disable DMA
  strh  r1, [r4]
  // set source
  str   r2, [r5]
  // enable DMA
  strh  r3, [r4]

  // rotate the addresses and decrease nextBufferIndex
  ldr   r1, [r0, #0]
  ldr   r3, [r0, #8]
  str   r2, [r0, #0]
  str   r3, [r0, #4]
  str   r1, [r0, #8]
  ldr   r0, =IW.nextBufferIndex
  ldr   r1, [r0]
  subs  r1, #4
  cmp   r1, #4
  movlt r1, #4
  str   r1, [r0]

  pop   {r4-r5}

  // check for vblank at same time
  and   r2, ip, ip, lsr #16
  ands  r3, r2, #0x01
  bxeq  lr

vblank:
  // add custom vblank code here
  bx    lr
  .pool
.end

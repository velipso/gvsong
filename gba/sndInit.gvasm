//
// gvsong - Builds and renders songs designed for Game Boy Advance
// by Sean Connelly (@velipso), https://sean.cm
// Project Home: https://github.com/velipso/gvsong
// SPDX-License-Identifier: 0BSD
//

.stdlib
.import './irqStartTimer.gvasm' { irqStartTimer }
.import './config.gvasm' { IW }

.begin sndInit //()
  .arm
  // disable interrupts during setup
  ldr   r0, =REG_IME
  ldr   r1, =0
  strb  r1, [r0]

  // setup DISPSTAT
  ldr   r0, =REG_DISPSTAT
  ldr   r1, =8 // enable vblank
  strh  r1, [r0]

  // setup IE
  ldr   r0, =REG_IE
  ldr   r1, =0x11 // enable timer1 + vblank
  strh  r1, [r0]

  // stop timer 0,1
  ldr   r0, =REG_TM0CNT
  ldr   r1, =0
  strh  r1, [r0]
  ldr   r0, =REG_TM1CNT
  strh  r1, [r0]

  // setup timer delays
  ldr   r0, =REG_TM0D
  ldr   r1, =0x10000 - 0x200
  strh  r1, [r0]
  // we want to delay 311296 cycles
  ldr   r0, =REG_TM1D
  ldr   r1, =0xed00
  strh  r1, [r0]

  // set IRQ handler
  ldr   r0, =0x03007ffc
  ldr   r1, =irqStartTimer
  str   r1, [r0]

  // enable interrupts
  ldr   r0, =REG_IME
  ldr   r1, =1
  strb  r1, [r0]

  // turn sound chip on
  ldr   r0, =REG_SOUNDCNT_X
  ldr   r1, =0x0080
  strh  r1, [r0]

  // set sound to use FIFO A
  ldr   r0, =REG_SOUNDCNT_H
  ldr   r1, =0x0b0f
  strh  r1, [r0]

  // set DMA1 destination to FIFO A
  ldr   r0, =REG_DMA1DAD
  ldr   r1, =REG_FIFO_A
  str   r1, [r0]

  // point DMAs to buffers
  ldr   r0, =REG_DMA1SAD
  ldr   r1, =IW.buffer1
  str   r1, [r0]

  // enable DMA1
  ldr   r0, =REG_DMA1CNT_H
  ldr   r1, =0xb640
  strh  r1, [r0]

  // save alt buffers for next render
  ldr   r0, =IW.bufferAddr[0]
  ldr   r1, =IW.buffer1
  str   r1, [r0, #0]
  ldr   r1, =IW.buffer2
  str   r1, [r0, #4]
  ldr   r1, =IW.buffer3
  str   r1, [r0, #8]
  ldr   r0, =IW.nextBufferIndex
  movs  r1, #4
  str   r1, [r0]

  // wait for vblank to fire (irqStartTimer)
  swi   0x020000

  // wait for vblank again (irqHop)
  swi   0x020000

  // start timer0
  ldr   r0, =REG_TM0CNT
  ldr   r1, =0x0080
  strh  r1, [r0]

  bx    lr
  .pool
.end
